PlatinumSrc BASIC Guide

Commands, functions, variables, and keywords:

    General:

        ARG$[]
            Arguments given to the current script.

        {DEL|DELETE} { [VAR] <VAR> [, <VAR>]... | SUB <SUB> [, <SUB>]... }

        ERROR <TEXT$> [, <RETURN%>]
            Raises an error.
            Optionally include an integer return value, otherwise 1 will be used.
            The same return value rules as EXIT are used. 
            Examples:
                ERROR "Not implemented"
                    Error: User: Not implemented

        EXIT [<RETURN%>]
            Exits with an optional integer return value.
            A return value of 0 is success, a positive number is failure, and a negative number is a fatal error.

        FALSE
            A keyword equal to 0

        LEN(<VAL>)
            Return the length of a value.

        RAND([<TYPE>] { <MAX> | <MIN>, <MAX> })
            Return a random number.
            An optional numerical type can be specified. By default, INT is used.
            If MIN > MAX, MIN will always be returned. By default, MIN is 0.

        SLEEP <SECONDS> [, <INTERRUPTABLE>]
            Sleep for a certain amount of seconds.
            If the interruptibility is not specified, it is assumed to be TRUE.

        SRAND <VAL>
        SRAND(<VAL>)
            Seed the random number generator using a U64.
            The function version will return the old seed.

        TRUE
            A keyword equal to 1

    I/O:

        PRINT [,|;] [<VAL> [{,|;} <VAL>]... [,|;] ]
            Output values.
            ',' will print a tab before the next value while ';' will add nothing.
            Adding ';' to the end will omit the newline.
            Examples:
                PRINT "Hello World!"
                    Hello World!
                PRINT "Test", "text"
                    Test    text
                PRINT "Value: "; VAR
                    Value: 0
                PRINT "Test";
                PRINT "Text"
                    TestText

    Strings:

        BIN$({ <VAL$> [, <PADDING$> [, <LENGTH> [, <SEPARATOR>]]] | <VAL[%|!|#]> [, <PADDING$> [, <LENGTH>]] })
            Convert a value to binary.

        BYTES$({L|B|N}, [<VAL> [, <VAL>]...])
            Convert the inputs into bytes.
            Supply L, B, or N before the values to force little endian, big endian, or native endian.
            Examples:
                MYINT = 123
                MYSTR$ += BYTES$(L, MYINT, U8(MYINT))
                PRINT HEX$(MYSTR$,,, " ")
                    7B 00 00 00 7B

        HEX$({ <VAL$> [, <SEPARATOR> [, <PADDING$> [, <LENGTH>]]] | <VAL[%|!|#]> [, <PADDING$> [, <LENGTH>]] })
            Convert a value to hexadecimal.

        TRIM {L|R|LR}, <VAR$> [, <CHARS$>]
        TRIM$({L|R|LR}, <VAL$> [, <CHARS$>])
            Trim chars off of a string.
            The command version trims a variable in-place while the function version returns a new string.
            Optionally provide the characters that are looked for, otherwise " \t\n\v" is used.

    Events:

        ON <EVENT$> { GOSUB <SUB> | IGNORE }
            Set a subroutine to be called for or ignore an event.
            The sub type will be checked when the event fires and an error will be raised if the arguments cannot be
            cast to something the sub will accept.

        RAISE EVENT$ [, ARG]...
            Raise an event with optional arguments.

    PlatinumSrc:

        ALTPLATDIR(<ID>)
            Returns a platform-specific directory name (see altplatdir in platform.c).

        CALL <PATH$> { [, <ARG$>]... | <ARG$[]> }
            Run another script while sharing data and definitions.

        CFGVAR(<SECT$>, <VAR$> [, <DEFAULT$>])

        MODULE()
            Returns "client" or "server".

        PLATDIR(<ID>)
            Returns the platform-specific directory name (see platdir in platform.c).

        PLATFORM()
            Returns the current platform ID.

        PLATNAME(<ID>)
            Returns the platform name.

        PLOG [FUNC|FUNCLN|MSGBOX|DEBUG]... {INFO|WARN|ERROR|CRIT} [FUNC|FUNCLN|MSGBOX|DEBUG]..., <TEXT$>

        RUN <PATH$> { [, <ARG$>]... | <ARG$[]> }
            Run another script without sharing data and definitions.

        START <PATH$> { [, <ARG$>]... | <ARG$[]> }
            Run another script independently.

    PlatinumSrc client-only:

        CLOSEMAP <HANDLE>

        UI { CREATE <TYPE> [<ATTRIB> <DATA> [, <ATTRIB> <DATA>]...] | EDIT <ID> [<ATTRIB> [, <ATTRIB>]...] | DELETE
            <ID> }
        UI(CREATE <TYPE> [<ATTRIB> [, <ATTRIB>]...])

        MAPINFO(<HANDLE>, <ATTRIB>)

        OPENMAP(<PATH$>)

    PlatinumSrc server-only:

        GETPLAYERS([<FILTER>])
            Get a list of players based on a filter subroutine and return them as a U64[].
            The sub must accept a U64 player ID and return BOOL. A return value of TRUE will include the player in the
            list.
            If no sub is provided, all players are returned.

        GINFO(<GROUP>, <ATTRIB>)
            Returns an attribute about a group using a U16 ID.
            Current available attributes are NAME (STRING), COLOR (FLOAT[3]), PLAYERS (U64[]), ENTITIES (U32[]).

        NETEVENT { ALL | LIST {<GROUPS>|<PLAYERS>} }, <EVENT$> [<ARG$> [, <ARG$>]...]
            Send a netevent to all clients, groups of clients, or single clients.
            Supply optional argument strings, otherwise none will be passed.
            Clients accept event handlers that take (STRING[]) or (STRING [, STRING]...).
            If the client takes individual strings instead of a list, strings are discarded if extra, or empty if not
            provided.
            Examples:
                NETEVENT ALL, "motd", "Hello world from the server!"
                SUB BOOL CHKNAME (U64 P)
                    IF FIND$(LCASE$(PINFO(P, NAME)), "test") >= 0
                        RETURN TRUE
                    ELSE
                        RETURN FALSE
                    END
                END
                NETEVENT LIST GETPLAYERS(CHKNAME), "banner", "blue", "3", "Your name has \"test\" in it!"

        PINFO(<PLAYER>, <ATTRIB>)
            Returns an attribute about a player using a U64 ID.
            Current available attributes are NAME (STRING), POS (FLOAT[3]), HEALTH (FLOAT), SHIELD (FLOAT), and WEAPONS
            (STRING[]).

        SPAWN <TYPE> [<ATTRIB> <DATA> [, <ATTRIB> <DATA>]...]


